#! /usr/local/bin/sbcl --noinform

(defun read-file (file)
  (with-open-file (in file)
	(let ((data (make-string (file-length in))))
      (read-sequence data in)
      data)))

(defmacro unroll-list-for-search (words string)
  (let ((form '()))
	(dolist (word words)
	  (print word)
	  (cons `(search ,word ,string) form))))

(defun search-privileged-files (logic-behaviour words)
  (let ((match-file '()))
	(if (probe-file "~/.logfind")
		(with-open-file (in "~/.logfind")
		  (do ((line (read-line in nil)
					 (read-line in nil)))
			  ((null line))
			(print line)
			(let ((file-content (read-file line)))
			  ())))))))) ;; now i need to find words in file-content, based on the logic behaviour -> and or

(defun behaviour (argv)
  "determines the logic behaviour of logfind."
  (cond
	((null argv) 'and)
	((string= "-o" (car argv)) 'or)
	(t (behaviour (cdr argv)))))

(defun sanitize-commandline (argv)
  "cleans the command line arguments"
  (remove "-o" argv :test #'equal))
  
(defun main (argv)
  (let ((logic (behaviour argv)) (words (sanitize-commandline argv)))
	(format t "~a~%~{~a ~}" logic words)
	(search-privileged-files logic words)))

(if (>= (length sb-ext:*posix-argv*) 1)
	(main (cdr (cdr sb-ext:*posix-argv*))))
